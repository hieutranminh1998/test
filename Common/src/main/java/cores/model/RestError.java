/*
 * deposits/transactions
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package cores.model;

import java.util.Objects;

import com.example.ulti.JsonUtil;
import com.google.gson.annotations.SerializedName;

import io.swagger.annotations.ApiModelProperty;
import com.example.bean.ErrorResponse;
import com.example.bean.MambuError;

/**
 * RestError
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-02-05T04:37:43.742Z")
public class RestError {
	@SerializedName("errorCode")
	private Integer errorCode = null;

	@SerializedName("errorSource")
	private String errorSource = null;

	@SerializedName("errorReason")
	private String errorReason = null;

	private boolean timeout;
	
	public boolean isTimeout() {
		return timeout;
	}

	public void setTimeout(boolean timeout) {
		this.timeout = timeout;
	}

	public String getErrorReason() {
		return errorReason;
	}

	public void setErrorReason(String errorReason) {
		this.errorReason = errorReason;
	}

	public RestError errorCode(Integer errorCode) {
		this.errorCode = errorCode;
		return this;
	}

	/**
	 * Get errorCode
	 * 
	 * @return errorCode
	 **/
	@ApiModelProperty(value = "")
	public Integer getErrorCode() {
		return errorCode;
	}

	public void setErrorCode(Integer errorCode) {
		this.errorCode = errorCode;
	}

	public RestError errorSource(String errorSource) {
		this.errorSource = errorSource;
		return this;
	}

	/**
	 * Get errorSource
	 * 
	 * @return errorSource
	 **/
	@ApiModelProperty(value = "")
	public String getErrorSource() {
		return errorSource;
	}

	public void setErrorSource(String errorSource) {
		this.errorSource = errorSource;
	}

	public RestError(MambuError error) {
		super();
		this.errorCode = error.getCode();
		this.errorReason = error.getMessage();
	}

	public RestError(ApiException apiE) {
		super();
		if (apiE.getRestError() != null) {
			this.errorCode = apiE.getRestError().getErrorCode();
			this.errorReason = apiE.getRestError().getErrorReason();
			this.errorSource = apiE.getRestError().getErrorSource();
			this.timeout = apiE.getRestError().timeout;
			return;
		}
		this.errorReason = apiE.getResponseBody();
		ErrorResponse errorResponse = JsonUtil.toObject(apiE.getResponseBody(), ErrorResponse.class);
		if (errorResponse != null) {
			this.errorReason = errorResponse.getErrors().get(0).getErrorReason();
		}
		this.errorCode = apiE.getCode();

	}

	@Override
	public boolean equals(java.lang.Object o) {
		if (this == o) {
			return true;
		}
		if (o == null || getClass() != o.getClass()) {
			return false;
		}
		RestError restError = (RestError) o;
		return Objects.equals(this.errorCode, restError.errorCode)
				&& Objects.equals(this.errorSource, restError.errorSource)
				&& Objects.equals(this.errorReason, restError.errorReason);
	}

	@Override
	public int hashCode() {
		return Objects.hash(errorCode, errorSource, errorReason);
	}

	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder();
		sb.append("class RestError {\n");

		sb.append("    errorCode: ").append(toIndentedString(errorCode)).append("\n");
		sb.append("    errorSource: ").append(toIndentedString(errorSource)).append("\n");
		sb.append("    errorReason: ").append(toIndentedString(errorReason)).append("\n");
		sb.append("}");
		return sb.toString();
	}

	public RestError() {
		super();
	}

	public RestError(int code, String me) {
		super();
		this.errorCode = code;
		this.errorReason = me;
	}

	private String toIndentedString(java.lang.Object o) {
		if (o == null) {
			return "null";
		}
		return o.toString().replace("\n", "\n    ");
	}

	public RestError(Integer errorCode, String errorReason, String errorSource) {
		super();
		this.errorCode = errorCode;
		this.errorReason = errorReason;
		this.errorSource = errorSource;
	}

	public RestError(Integer errorCode, String errorSource, String errorReason, boolean timeout) {
		super();
		this.errorCode = errorCode;
		this.errorSource = errorSource;
		this.errorReason = errorReason;
		this.timeout = timeout;
	}

}
